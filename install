#!/usr/bin/env bash

set -e

sudo cp files/49-teensy.rules /etc/udev/rules.d/

ROSDISTRO="$(rosversion -d)"
BASE=$1
SENSOR=$2
ARCH="$(uname -m)"
echo $ARCH
#echo "
#______ _____________   _________ ________ _______ ________ _______ ________
#___  / ____  _/___  | / /__  __ \___  __ \__  __ \___  __ )__  __ \___  __/
#__  /   __  /  __   |/ / _  / / /__  /_/ /_  / / /__  __  |_  / / /__  /   
#_  /_____/ /   _  /|  /  / /_/ / _  _, _/ / /_/ / _  /_/ / / /_/ / _  /    
#/_____//___/   /_/ |_/   \____/  /_/ |_|  \____/  /_____/  \____/  /_/     
#                    
#                            http://linorobot.org                                                                          
#"
if [ "$3" != "test" ]
    then
        if [ "$*" == "" ]
            then
                echo "No arguments provided"
                echo
                echo "Example: $ ./install.sh 2wd xv11"
                echo
                exit 1
                
        elif [[ "$1" != "2wd" && "$1" != "4wd" && "$1" != "mecanum" && "$1" != "ackermann" ]]
            then
                echo "Invalid linorobot base: $1"
                echo
                echo "Valid Options:"
                echo "2wd"
                echo "4wd"
                echo "ackermann"
                echo "mecanum"
                echo
                exit 1

        elif [[ "$2" != "xv11" && "$2" != "rplidar" && "$2" != "kinect" && "$2" != "realsense" ]]
            then
                echo "Invalid linorobot base: $2"
                echo
                echo "Valid Options:"
                echo "xv11"
                echo "rplidar"
                echo "kinect"
                echo "realsense"
                echo
                exit 1
        
        elif [[ "$ARCH" != "x86_64" && "$2" == "realsense" ]]
            then
                echo "Intel Realsense R200 is not supported in $ARCH architecture."
                exit 1

        fi

        echo
        echo -n "You are installing ROS-$ROSDISTRO Linorobot for $BASE base with a $SENSOR sensor. Enter [y] to continue. " 
        read reply
        if [[ "$reply" != "y" && "$reply" != "Y" ]]
            then
                echo "Wrong input. Exiting now"
                exit 1
        fi
fi

echo
echo "INSTALLING NOW...."
echo

sudo apt-get update
sudo apt-get install -y avahi-daemon
sudo apt-get install -y openssh-server
sudo apt-get install -y python-setuptools 
sudo apt-get install -y python-dev 
sudo apt-get install -y build-essential
sudo apt-get install -y python-gudev

sudo easy_install pip
sudo pip install -U platformio
sudo rm -rf ~/.platformio/

source /opt/ros/$ROSDISTRO/setup.bash

sudo apt-get install -y ros-$ROSDISTRO-roslint
sudo apt-get install -y ros-$ROSDISTRO-rosserial
sudo apt-get install -y ros-$ROSDISTRO-imu-filter-madgwick
sudo apt-get install -y ros-$ROSDISTRO-gmapping
sudo apt-get install -y ros-$ROSDISTRO-map-server
sudo apt-get install -y ros-$ROSDISTRO-navigation

if [[ "$SENSOR" == "xv11" || "$3" == "test" ]]
    then
        sudo apt-get install -y ros-$ROSDISTRO-xv-11-laser-driver
        
elif [[ "$SENSOR" == "kinect" || "$3" == "test" ]]
    then
        sudo apt-get install -y ros-$ROSDISTRO-freenect-launch
        sudo apt-get install -y ros-$ROSDISTRO-depthimage-to-laserscan

elif [[ "$SENSOR" == "realsense" || "$3" == "test" ]]
    then
        sudo apt-get install -y ros-$ROSDISTRO-realsense_camera
        sudo apt-get install -y ros-$ROSDISTRO-depthimage-to-laserscan
fi

if [[ "$BASE" == "ackermann" || "$3" == "test" ]]
    then
        sudo apt-get install -y ros-$ROSDISTRO-teb-local-planner
fi

cd 
mkdir -p mobi_robot_ws/src
cd mobi_robot_ws/src
catkin_init_workspace

git clone https://github.com/aeksiri/mobi_msgs.git
cd ~/mobi_robot_ws
catkin_make

echo "source ~/mobi_robot_ws/devel/setup.bash" >> ~/.bashrc
echo "export MOBILIDAR=$SENSOR" >> ~/.bashrc
echo "export MOBIBASE=$BASE" >> ~/.bashrc
source ~/.bashrc

cd src
git clone https://github.com/aeksiri/mobi_pid.git
git clone https://github.com/aeksiri/mobi_robot.git
git clone https://github.com/aeksiri/mobi_imu_cal.git
git clone https://github.com/aeksiri/mobi_udev.git

if [[ "$SENSOR" == "rplidar" || "$3" == "test" ]]
    then
        git clone https://github.com/robopeak/rplidar_ros.git
fi

cd mobi_robot
TRAVIS_BRANCH="echo $TRAVIS_BRANCH"
if [ "$TRAVIS_BRANCH" = "devel" ]; then git checkout devel; fi

cd teensy/firmware
export PLATFORMIO_CI_SRC=$PWD/src/firmware.ino
platformio ci --project-conf=./platformio.ini --lib="./lib/ros_lib" --lib="./lib/config"  --lib="./lib/motor"  --lib="./lib/kinematics"  --lib="./lib/pid"  --lib="./lib/imu"

cd ~/mobi_robot_ws
catkin_make

echo
echo "INSTALLATION DONE!"
echo
